template(name='blog')
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.inline.header
                |#{post_count}
                |posts
            .ui.icon.input
                if post_query
                    i.remove.link.icon.clear_post_query(title='clear search')
                else 
                    i.search.icon
                input#post_search(type='text' placeholder='title...' value=post_query)
            if currentUser
                a.ui.icon.button.add_post(title='cook')
                    i.plus.green.large.icon
        .twelve.wide.column.scrolling
            .sorting_row
                +session_set key='view_limit' value=10
                +session_set key='view_limit' value=20

                
                |sort by
                .ui.compact.small.menu
                    .ui.simple.dropdown.item
                        i.icon(class=post_sort_icon)
                        strong #{current_post_sort_label}
                        i.dropdown.icon
                        .menu
                            +set_post_sort_key key='price_usd' label='price' icon='money'
                            //- +set_post_sort_key key='_timestamp' label='added' icon='clock'
                            +set_post_sort_key key='comment_count' label='comment count' icon='chat'
                            +set_post_sort_key key='views' label='views' icon='eye'
                            +set_post_sort_key key='points' label='points' icon='line chart'
                .ui.compact.icon.button.set_sort_direction(title='toggle sort direction')
                    if sorting_up
                        i.sort.amount.down.icon
                    else
                        i.sort.amount.up.icon
                |&nbsp;
                |&nbsp;
                // .ui.compact.menu
                //     .ui.simple.dropdown.item
                //         strong #{post_limit}
                //         i.dropdown.icon
                //         .menu
                        //   +set_post_limit amount=1
                           +set_post_limit amount=5
                           +set_post_limit amount=10
                            +set_post_limit amount=20
                .ui.hidden.divider
            if subs_ready
                if one_post
                    .ui.stackable.centered.one.column.grid
                        each post_docs
                            +post_card
                else if two_posts
                    .ui.stackable.centered.two.column.grid
                        each post_docs
                            +post_card
                else if three_posts
                    .ui.stackable.centered.three.column.grid
                        each post_docs
                            +post_card
                else
                    .ui.stackable.centered.three.column.grid
                        each post_docs
                            +post_card
            else 
                .ui.basic.center.aligned.segment
                    i.massive.loading.food.icon

template(name='set_post_sort_key')
    .item.set_sort
        if color
            .ui.label(class=color) #{label}
        else 
            if emoji
                em(data-emoji=emoji)
            else if icon
                i.icon(class=icon)
            |#{label}
        

template(name='set_view_mode_post')
    .item.set_view
        i.icon(class=icon)
        |#{title}


template(name='set_post_limit')
    .item.set_limit #{amount}



template(name='post_card')
    .ui.card.view_post.pointer
        img.ui.fluid.rounded.image(src="{{c.url image_id height=200 width=400 gravity='face' crop='fill'}}" class=currentUser.invert_class)
        .content
            a.ui.header(href="/post/#{_id}") #{title}
            .ui.small.grey.header #{when}
            | !{content}
            // +comments_view_small
            +author_info
        
template(name='post_item')
    .ui.fluid.segment.view_post.pointer
        a.ui.header(href="/post/#{_id}/view") #{title}
        div
        .ui.small.grey.inline.header #{when}
        | #{content}
        each tags 
            .ui.basic.small.label #{this}
        

template(name='post_view')
    with current_doc
        .ui.stackable.padded.grid
            .middle.aligned.row 
                .sixteen.wide.column
                    a(href="/post")
                        i.newspaper.circular.link.big.icon
                    .ui.large.inline.header #{title}
                    // div
                    // .ui.inline.grey.header {{from_now start_datetime}}
                    
                    if can_edit
                        a.edit_post(href="/post/#{_id}/edit" title='edit')
                            i.big.circular.link.pencil.icon

            .row 
                .four.wide.column
                    img.ui.fluid.rounded.image(src="{{c.url image_id }}" class=currentUser.invert_class)
                    .ui.segment
                        .ui.header 
                            small author
                        a.ui.header(href="/user/#{_author.username}") 
                            img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=currentUser.invert_class)
                            |#{_author.username}
                    .ui.small.grey.header 
                        i.line.chart.icon
                        |stats
                    .ui.list
                        .item #{views} views
                    each viewers
                        .ui.label #{username
                    +array_view key='tags' label='tags' direct=true
                    +voting_full
                    //- +array_view key='location_tags' label='location_tags' direct=true
                .twelve.wide.column
                    // a.ui.header(href="/user/#{target.username}")
                    //     |#{target.username}
                    .ui.segment
                        |!{content}
                    div 
                    .spacer
                    .spacer
                    +comments
                // .four.wide.column
                
                    //- .ui.fluid.green.button.submit
                    //-     i.checkmark.icon
                    //-     |submit
template(name='post_edit')
    with current_doc
        .ui.stackable.padded.grid
            .centered.middle.aligned.row 
                .four.wide.center.aligned.column
                    .ui.header 
                        +icolor name='news' cl='ui image inline pointer'
                        |edit post
                    a.ui.icon.green.big.circular.button(href="/post/#{_id}/view" title='save')
                        i.checkmark.big.icon
                .eight.wide.column
                    +text_edit key='title' label='title' direct=true
                    +html_edit key='content' label='content' direct=true
                .four.wide.center.aligned.column
                    i.large.link.circular.red.remove.icon.delete_post
                    .ui.header 
                        small author
                        |#{_author.username}
                    if is_admin
                        +single_user_edit key='_author_id' label='author' direct=true
                    +image_edit key='image_id' label='image' direct=true
                    div 
                    +array_edit key='tags' label='tags' direct=true
                    +boolean_edit key='published' icon='visible' direct=true
                    if is_admin 
                        +text_edit key='model' label='model' direct=true
                    //- +array_edit key='location_tags' label='location_tags' direct=true
                    // unless published
                    //     a.ui.fluid.green.button.submit(href="/save")
                    //         i.checkmark.icon
                    //         |publish
                    // else
                    //     .ui.basic.button.unpublish 
                    //         |unpublish
                    .ui.header
                        |audience