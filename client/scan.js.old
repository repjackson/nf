// # QrScanner = require 'qr-scanner.min.js'
// import QrScanner from '/qr-scanner.min.js'; // if using plain es6 import
// import QrScanner from 'qr-scanner'; // if installed via package and bundling with a module bundler like webpack or rollup

// QrScanner.WORKER_PATH = 'qr-scanner-worker.min.js';
import {Html5QrcodeScanner} from "html5-qrcode"

// To use Html5Qrcode (more info below)
import {Html5Qrcode} from "html5-qrcode"


if (Meteor.isClient) {
  Router.route('/scanner', (function() {
    return this.render('scanner');
  }), {
    name: 'scanner'
  });
  Template.scanner.onCreated(function() {});
//   Template.scanner.onRendered(function() {
  Template.scanner.events({
      "click .start": function() {
        // const qrScanner = new QrScanner(this.videoElem, result => console.log('decoded qr code:', result));
          
        console.log(Html5QrcodeScanner);
        
        function onScanSuccess(decodedText, decodedResult) {
          // handle the scanned code as you like, for example:
          console.log(`Code matched = ${decodedText}`, decodedResult);
        }
        
        function onScanFailure(error) {
          // handle scan failure, usually better to ignore and keep scanning.
          // for example:
        //   console.warn(`Code scan error = ${error}`);
        }
        
        let html5QrcodeScanner = new Html5QrcodeScanner(
          "reader",
          { fps: 10, qrbox: {width: 300, height: 300} },
          /* verbose= */ false);
        html5QrcodeScanner.render(onScanSuccess, onScanFailure);
        
        
      }}
      );
//   Template.scanner.events({
//     'click .start': function() {
//       console.log(qrScanner);
//       qrScanner.start();
//     },
//     'click .stop': function() {
//       qrScanner.stop();
//     },
//     'click .check': function() {
//       qrScanner.hasCamera();
//     }
//   });
}