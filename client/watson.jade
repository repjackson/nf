template(name='doc_sentiment') 
    //- .ui.inline.header 
    //-     |sentiment
    //- .ui.tiny.disabled.progress(data-percent=sentiment_score_percent class=sentiment_bar_class)
    //-     .bar
    //-     .progress
    //- .label
    //-     |{{ to_percent doc_sentiment_score }}%
    //-     if is_positive
    //-         | positive
    //-     else
    //-         | negative
    |#{doc_sentiment_label}
    |#{sentiment_score_percent}


template(name='small_sentiment') 
    .ui.tiny.disabled.progress(data-percent=sentiment_score_percent class=sentiment_bar_class)
        .bar
        .progress
//- 
template(name='doc_emotion') 
    .spacer
    // .ui.dividing.inline.header 
    //     | emotion
    //- with watson.emotion
    //- div
    //- if above_50 'joy_percent'
        //- .spacer
        //- .rounded(class=omega_dark_mode_class style="height:7px;width:{{to_percent joy_percent}}%;background-color:green" title="{{to_percent joy_percent}}% joy")
    span.ui.large.green.text(class="{{calculated_size joy_percent}}") {{ to_percent joy_percent }}% joy 
        |&nbsp;
    //- if above_50 'sadness_percent'
        //- .spacer
        //- .rounded(class=omega_dark_mode_class style="height:7px;width:{{to_percent sadness_percent}}%;background-color:blue" title="{{to_percent sadness_percent}}% sad")
    span.ui.large.blue.text(class="{{calculated_size sadness_percent}}") {{ to_percent sadness_percent}}% sad 
        |&nbsp;
    //- if above_50 'fear_percent'
        //- .spacer
    span.ui.large.grey.text(class="{{calculated_size fear_percent}}") {{ to_percent fear_percent }}% fear 
        |&nbsp;
    //- .rounded(class=omega_dark_mode_class style="height:7px;width:{{to_percent fear_percent}}%;background-color:grey" title="{{to_percent fear_percent}}% fear")
    //- if above_50 'disgust_percent'
        //- .spacer
    span.ui.large.orange.text(class="{{calculated_size disgust_percent}}") {{ to_percent disgust_percent }}% disgust 
        |&nbsp;
    //- .rounded(class=omega_dark_mode_class style="height:7px;width:{{to_percent disgust_percent}}%;background-color:orange" title="{{to_percent disgust_percent}}% disgust")
    //- if above_50 'anger_percent'
        //- .spacer
    span.ui.large.red.text(class="{{calculated_size anger_percent}}") {{ to_percent anger_percent }}% anger 
        |&nbsp;
    //- .rounded(class=omega_dark_mode_class style="height:7px;width:{{to_percent anger_percent}}%;background-color:red" title="{{to_percent anger_percent}}% anger")
    .spacer

// template(name='call_watson')
//     button.ui.large.icon.circular.button.autotag
//         i.dna.icon
//         // |autotag
//     if page_doc.watson 
//         i.checkmark.icon
template(name='autotag')
    button.ui.large.icon.circular.button.autotag
        i.dna.icon
        // |autotag
        if watson 
            i.checkmark.icon
//- 
template(name='call_visual')
    #call_visual.ui.large.icon.button(title='analyze')
        i.chess.knight.icon


template(name='keywords')
    // .ui.grey.inline.header 
    //     |#{watson.keywords.length} keywords
    .ui.five.column.stackable.grid
        each watson.keywords
            .ui.column
                span.large120(class="{{calculated_size 'relevance'}}" title="{{ to_percent relevance }}% relevant") #{text}
                .ui.basic.circular.label(title='relevant') {{ to_percent relevance }}% rel
                .ui.basic.circular.label {{ sentiment.label }} {{ to_percent sentiment.score }}%:
                .ui.basic.circular.label(title='instance count') #{count}x
                .description
                    if emotion
                        with emotion
                            span {{ to_percent sadness }}% sad
                                .rounded.invert(style="height:5px;width:{{to_percent sadness}}%;background-color:blue" title="{{to_percent sadness}}% sad" class=currentUser.invert_class)
                            span {{ to_percent joy }}% joy
                                .rounded.invert(style="height:5px;width:{{to_percent joy}}%;background-color:green" title="{{to_percent joy}}% sadness" class=currentUser.invert_class)
                            span {{ to_percent disgust }}% disgust
                                .rounded.invert(style="height:5px;width:{{to_percent disgust}}%;background-color:orange" title="{{to_percent disgust}}% disgust" class=currentUser.invert_class)
                            span {{ to_percent fear }}% fear
                                .rounded.invert(style="height:5px;width:{{to_percent fear}}%;background-color:black" title="{{to_percent fear}}% fear" class=currentUser.invert_class)
                            span {{ to_percent anger }}% anger
                                .rounded.invert(style="height:5px;width:{{to_percent anger}}%;background-color:red" title="{{to_percent anger}}% anger" class=currentUser.invert_class)




template(name='entities')
    // .ui.grey.header 
    //     |#{watson.entities.length} entities
    .ui.five.column.stackable.grid
        each watson.entities
            .ui.column
                .ui.small.grey.inline.header #{type}
                span.large120.set_entity_name(class="{{calculated_size 'relevance'}}" title="{{ to_percent relevance }}% relevant") #{text}
                // .spacer
                .ui.basic.small.circular.label(title='relevant') {{ to_percent relevance }}%
                .ui.basic.small.circular.label(title="sentiment") {{ sentiment.label }} {{ to_percent sentiment.score }}%
                .ui.basic.small.circular.label(title='count') #{count}x
                .ui.basic.small.circular.label(title='confident') {{ to_percent confidence}}% con
                with disambiguation
                    // .ui.small.inline.header subtypes
                    each subtype
                        .ui.tiny.basic.circular.label #{this}
                    a.ui.tiny.grey.header.set_entity_name(href=dbpedia_resource target='_window') name
                        |#{name}
                if emotion
                    with emotion
                        span {{ to_percent sadness }}% sad
                            .rounded.invert(style="height:5px;width:{{to_percent sadness}}%;background-color:blue" title="{{to_percent sadness}}% sad" class=currentUser.invert_class)
                        span {{ to_percent joy }}% joy
                            .rounded.invert(style="height:5px;width:{{to_percent joy}}%;background-color:green" title="{{to_percent joy}}% sadness" class=currentUser.invert_class)
                        span {{ to_percent disgust }}% disgust
                            .rounded.invert(style="height:5px;width:{{to_percent disgust}}%;background-color:orange" title="{{to_percent disgust}}% disgust" class=currentUser.invert_class)
                        span {{ to_percent fear }}% fear
                            .rounded.invert(style="height:5px;width:{{to_percent fear}}%;background-color:black" title="{{to_percent fear}}% fear" class=currentUser.invert_class)
                        span {{ to_percent anger }}% anger
                            .rounded.invert(style="height:5px;width:{{to_percent anger}}%;background-color:red" title="{{to_percent anger}}% anger" class=currentUser.invert_class)



template(name='keyword_list')
    .ui.small.grey.inline.header 
        |#{watson_keywords.length} keywords
    each watson_keywords
        .ui.large.label #{this}
        span(class="{{calculated_size 'relevance'}}") #{this}



template(name='concept_list')
    .ui.small.grey.inline.header 
        |#{watson_concepts.length} concepts
    each watson_concepts
        .ui.large.label #{this}



template(name='concepts')
    .ui.small.grey.inline.header 
        |#{watson.concepts.length} concepts
    .large150
        each watson.concepts
            div(class="{{calculated_size 'relevance'}}" title="{{to_percent relevance}}% relevant")
                a(href=dbpedia_resource target='_blank') #{text}


template(name='visual_classes')
    //- .ui.small.grey.inline.header 
    //-     |#{visual_classes.length} visual classes
    .ui.list
        each visual_classes
            .item
                div(class="{{calculated_size 'score'}}" title="{{to_percent score}}%") #{class}
                // small {{to_percent score}}%
                small #{type_hierarchy}



template(name='categories')
    .ui.small.grey.inline.header 
        |#{watson.categories.length} categories
    .ui.list
        each watson.categories
            .item
                strong #{label}
                |{{ to_percent score }}%
                each explanation.relevant_text 
                    .ui.small.compact.circular.button.add_text #{text}


//- 
//- 
//- 
template(name='watson_view')
    // +tone
    +doc_sentiment
    +doc_emotion
    .ui.stackable.grid 
        .two.column.row 
            .column
                +concepts
            .column
                +categories
    +entities
    // +semantic_roles
    +keyword_list
    +concept_list
    +keywords
    .ui.hidden.divider
    // +relations
    //- if dev
    //-     .ui.styled.accordion
    //-         .title 
    //-             i.code.icon
    //-             i.dropdown.icon
    //-         .content
    //-             +jsonView(json=watson)
    //- +personality
    //- +consumption_preferences